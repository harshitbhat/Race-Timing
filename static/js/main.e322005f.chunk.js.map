{"version":3,"sources":["images/loader-2.svg","utils/timeConversion.js","utils/test.js","images/winnerLoader.svg","Components/Winners/Winners.jsx","Components/Consolation/Consolation.jsx","Components/TableHeaders/TableHeaders.jsx","Components/EntryList/EntryList.jsx","Components/Entry/Entry.jsx","Components/Athlete/Athlete.jsx","utils/names.js","Components/Overlay/Overlay.jsx","Components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["getTime","epoch","time","Date","h","getHours","padStart","m","getMinutes","s","getSeconds","ms","getMilliseconds","Winners","winner","this","props","className","length","map","player","rank","fullName","startTime","finishTime","id","src","winnerLoader","alt","Component","Consolation","rest","raceDistance","distance","TableHeaders","EntryList","rankings","filter","Entry","entries","completed","pl","notCompleted","sort","pl1","pl2","reverse","forEach","idx","filtered","filterEntries","loader","TestComponent","arr","jersy","names","players","i","push","now","velocity","Math","random","acceleration","Overlay","Button","isRaceStarted","startRace","onClick","TestApp","state","athletes","tick","timeStarted","finalLegDistance","bind","running","round","setState","currentTime","timer","setInterval","go","playeres","every","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e322005f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader-2.7fbd4e85.svg\";","export default function getTime(epoch) {\n  const time = new Date(epoch);\n  const h = (time.getHours() + '').padStart(2, 0);\n  const m = (time.getMinutes() + '').padStart(2, 0);\n  const s = (time.getSeconds() + '').padStart(2, 0);\n  const ms = (time.getMilliseconds() + '').padStart(3, 0);\n  return `${h}:${m}:${s}:${ms}`;\n}\n","import names from './names';\nconst numberOfAthletes = 10;\n\nconst players = [];\n\nfor (let i = 0; i < numberOfAthletes; i++) {\n  players.push({\n    id: `#${i + 1}${Date.now()}`,\n    jersy: 111 + i,\n    fullName: names[i],\n    velocity: Math.random() * 8 + 1,\n    acceleration: Math.random(),\n    distance: 0,\n    startTime: null,\n    finishTime: null,\n    rank: 'N/A',\n  });\n}\n\nexport default players;\n","export default __webpack_public_path__ + \"static/media/winnerLoader.5f0859c5.svg\";","import React, { Component } from 'react';\nimport getTime from '../../utils/timeConversion';\nimport winnerLoader from '../../images/winnerLoader.svg';\nimport './Winner.scss';\n\nexport default class Winners extends Component {\n  render() {\n    const { winner } = this.props;\n    return (\n      <div className=\"winner-table\">\n        {winner.length > 0 ? (\n          winner.map((player) => (\n            <div className=\"table-content addWinner\" key={player.id}>\n              <span className=\"table-content-ranking\">{player.rank}</span>\n              <span className=\"table-content-name\">{player.fullName}</span>\n              <span className=\"table-content-startTime\">\n                {getTime(player.startTime)}\n              </span>\n              <span className=\"table-content-finishTime\">\n                {getTime(player.finishTime)}\n              </span>\n            </div>\n          ))\n        ) : (\n          <div className=\"winner-loader\">\n            <img src={winnerLoader} alt=\"Loader\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport getTime from '../../utils/timeConversion';\nimport './Consolation.scss';\n\nexport default class Consolation extends Component {\n  render() {\n    const { rest, raceDistance } = this.props;\n    return (\n      <div className=\"rest-table-body\">\n        {rest.map((player) => (\n          <div className=\"table-content\" key={player.id}>\n            <span className=\"table-content-ranking\">{player.rank}</span>\n            <span className=\"table-content-name\">{player.fullName}</span>\n            <span className=\"table-content-startTime\">\n              {getTime(player.startTime)}\n            </span>\n            <span className=\"table-content-finishTime\">\n              {player.distance !== raceDistance\n                ? ''\n                : getTime(player.finishTime)}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class TableHeaders extends Component {\n  render() {\n    return (\n      <div className=\"table-headers\">\n        <span className=\"table-content-ranking header-text\">Rank</span>\n        <span className=\"table-content-name header-text\">Name</span>\n        <span className=\"table-content-startTime header-text\">\n          Entry Time (Finish Corridor)\n        </span>\n        <span className=\"table-content-finishTime header-text\">\n          Finish Time\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './EntryList.scss';\nimport Winners from '../Winners/Winners';\nimport Consolation from '../Consolation/Consolation';\nimport TableHeaders from '../TableHeaders/TableHeaders';\n\nexport default class EntryList extends Component {\n  render() {\n    const { rankings, raceDistance } = this.props;\n    const winner = rankings.filter(\n      (player) => player.rank === 1 || player.rank === 2 || player.rank === 3\n    );\n    const rest = rankings.filter(\n      (player) => player.rank !== 1 && player.rank !== 2 && player.rank !== 3\n    );\n    return (\n      <div className=\"leaderboard-table\">\n        <TableHeaders />\n        <Winners winner={winner} />\n        <Consolation rest={rest} raceDistance={raceDistance} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Entry.scss';\nimport loader from '../../images/loader-2.svg';\nimport EntryList from '../EntryList/EntryList';\n\nexport default class Entry extends Component {\n  filterEntries() {\n    const { entries, raceDistance } = this.props;\n    const completed = entries.filter((pl) => pl.distance === raceDistance);\n    const notCompleted = entries.filter((pl) => pl.distance !== raceDistance);\n\n    completed.sort((pl1, pl2) => pl1.finishTime - pl2.finishTime);\n    notCompleted.sort((pl1, pl2) => pl1.startTime - pl2.startTime).reverse();\n\n    completed.forEach((pl, idx) => (pl.rank = idx + 1));\n\n    return [...completed, ...notCompleted];\n  }\n  render() {\n    const { entries, raceDistance } = this.props;\n    const filtered = this.filterEntries(entries);\n    return (\n      <div className=\"displayTable\">\n        {entries.length > 0 ? (\n          <EntryList rankings={filtered} raceDistance={raceDistance} />\n        ) : (\n          <div className=\"loader\">\n            <img src={loader} alt=\"Loader\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Athlete.scss';\n\nexport default class TestComponent extends Component {\n  render() {\n    const { arr } = this.props;\n    return (\n      <div className=\"Player-Data\">\n        <div className=\"Player-data-headers\">\n          <span className=\"Player-data-id\">Id</span>\n          <span className=\"Player-data-name\">Name</span>\n          <span className=\"Player-data-distance\">Distance Covered (m)</span>\n        </div>\n        <div className=\"Player-data-main\">\n          {arr.map((pl) => (\n            <div key={pl.id} className=\"Player-Data-Row\">\n              <span className=\"Player-data-id\">{pl.jersy}</span>\n              <span className=\"Player-data-name\">{pl.fullName}</span>\n              <span className=\"Player-data-distance\">{pl.distance}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","const names = [\n  'Emmett Bishop',\n  'Fenix Skiles',\n  'Jacoby Schulz',\n  'Juna Steiger',\n  'Shlomo Hacker',\n  'Aaryn Manzanares',\n  'Renato Nordstrom',\n  'Aayden Lombardi',\n  'Jaxiel Danna',\n  'Danae Hermann',\n];\n\nexport default names;\n","import React, { Component } from 'react';\n\nexport default class Overlay extends Component {\n  render() {\n    return (\n      <div className=\"small-screen-message\">\n        <h2>Please use aplication on larger screen</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Button extends Component {\n  render() {\n    const { isRaceStarted, startRace } = this.props;\n    return !isRaceStarted ? (\n      <button className=\"BTN-start-el\" onClick={startRace}>\n        Start Race\n      </button>\n    ) : null;\n  }\n}\n","import React, { Component } from 'react';\n\nimport Entry from './Components/Entry/Entry';\nimport Athlete from './Components/Athlete/Athlete';\nimport playeres from './utils/test';\nimport Overlay from './Components/Overlay/Overlay';\nimport Button from './Components/Button/Button';\n\nimport './App.scss';\n\nexport default class TestApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athletes: [],\n      tick: 0,\n      isRaceStarted: false,\n      timeStarted: null,\n      finalLegDistance: 150,\n      raceDistance: 200,\n      entries: [],\n    };\n    this.startRace = this.startRace.bind(this);\n  }\n\n  go() {\n    const { tick, finalLegDistance, raceDistance, athletes } = this.state;\n    const running = athletes.map((pl) => ({\n      ...pl,\n      distance:\n        Math.round(pl.velocity * tick + (pl.acceleration * tick ** 2) / 2) <=\n        raceDistance\n          ? Math.round(pl.velocity * tick + (pl.acceleration * tick ** 2) / 2)\n          : raceDistance,\n    }));\n    const filtered = running.filter((pl) => pl.distance >= finalLegDistance);\n    for (const pl of filtered) {\n      if (pl.startTime === null) {\n        pl.startTime = Date.now();\n      }\n      if (pl.distance === raceDistance && pl.finishTime === null) {\n        pl.finishTime = Date.now();\n      }\n    }\n    this.setState(() => ({\n      athletes: running,\n      tick: tick + 1,\n      entries: filtered,\n    }));\n  }\n\n  startRace() {\n    const currentTime = Date.now();\n\n    this.setState(() => ({\n      isRaceStarted: true,\n      timeStarted: currentTime,\n    }));\n\n    this.timer = setInterval(() => this.go(), 1000);\n  }\n\n  componentDidMount() {\n    this.setState({\n      athletes: playeres,\n    });\n  }\n\n  componentDidUpdate() {\n    const { athletes, raceDistance } = this.state;\n    if (athletes.every((pl) => pl.distance === raceDistance)) {\n      clearInterval(this.timer);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { athletes, isRaceStarted, entries, raceDistance } = this.state;\n    return (\n      <div className=\"App-Component\">\n        <h1 className=\"App-heading\">Sports Event Timing</h1>\n        <div className=\"App-Table-Heading\">\n          <span>Player Data</span>\n          <span>Leader Board</span>\n        </div>\n        <div className=\"Table-Content\">\n          <Athlete arr={athletes} />\n          <Entry entries={entries} raceDistance={raceDistance} />\n        </div>\n        <div className=\"Button-Start\">\n          <Button isRaceStarted={isRaceStarted} startRace={this.startRace} />\n        </div>\n        <Overlay />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}