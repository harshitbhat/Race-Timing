{"version":3,"sources":["images/loader.svg","images/gold.jpg","images/silver.jpg","images/bronze.jpg","utils/timeConversion.js","utils/getNames.js","Components/Winners/Winners.jsx","Components/Consolation/Consolation.jsx","Components/TableHeaders/TableHeaders.jsx","Components/EntryList/EntryList.jsx","Components/Entry/Entry.jsx","utils/names.js","App.js","reportWebVitals.js","index.js"],"names":["getTime","epoch","time","Date","h","getHours","padStart","m","getMinutes","s","getSeconds","ms","getMilliseconds","Winners","winner","this","props","className","map","player","rank","src","gold","alt","silver","bronze","fullName","startTime","finishTime","id","Component","Consolation","rest","currentTime","TableHeaders","EntryList","rankings","filter","length","Entry","entries","loader","names","now","maxTime","getStartAndFinishTime","sT","Math","floor","random","athletes","i","push","App","state","entryOrder","outputOrder","firstFinishTime","endTime","interval","filteredList","setState","reverse","sort","pl1","pl2","remaining","forEach","index","sortedAthletesEntry","a","b","sortedAthletesFinish","len","timer","setInterval","filterUsers","some","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df487eac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.cd569efa.svg\";","export default __webpack_public_path__ + \"static/media/gold.ffe2863d.jpg\";","export default __webpack_public_path__ + \"static/media/silver.4f1867b4.jpg\";","export default __webpack_public_path__ + \"static/media/bronze.dc137367.jpg\";","export default function getTime(epoch) {\n  const time = new Date(epoch);\n  const h = (time.getHours() + '').padStart(2, 0);\n  const m = (time.getMinutes() + '').padStart(2, 0);\n  const s = (time.getSeconds() + '').padStart(2, 0);\n  const ms = (time.getMilliseconds() + '').padStart(3, 0);\n  return `${h}:${m}:${s}:${ms}`;\n}\n","import names from './names';\nconst numberOfAthletes = 10;\n\nconst startTime = Date.now();\nconst maxTime = startTime + 60000;\n\nconst getStartAndFinishTime = () => {\n  const sT = Math.floor(Math.random() * (maxTime - startTime + 1) + startTime);\n  const eT = Math.floor(Math.random() * (maxTime - sT + 1) + sT);\n  return [sT, eT + 10000];\n};\n\nconst athletes = [];\n\nfor (let i = 0; i < numberOfAthletes; i++) {\n  const [startTime, finishTime] = getStartAndFinishTime();\n  athletes.push({\n    id: `#${i + 1}${Date.now()}`,\n    fullName: names[i],\n    startTime: startTime,\n    finishTime: finishTime,\n    rank: 'N/A',\n  });\n}\n\nexport default athletes;\n","import React, { Component } from 'react';\nimport gold from '../../images/gold.jpg';\nimport silver from '../../images/silver.jpg';\nimport bronze from '../../images/bronze.jpg';\nimport getTime from '../../utils/timeConversion';\n\nexport default class Winners extends Component {\n  render() {\n    const { winner } = this.props;\n    return (\n      <div className=\"winner-table\">\n        {winner.map((player) => (\n          <div className=\"table-content addMargin\" key={player.id}>\n            <span className=\"table-content-ranking\">\n              {player.rank === 1 ? (\n                <img className=\"medal\" src={gold} alt=\"Gold Medal\" />\n              ) : player.rank === 2 ? (\n                <img className=\"medal\" src={silver} alt=\"Silver Medal\" />\n              ) : player.rank === 3 ? (\n                <img className=\"medal\" src={bronze} alt=\"Bronze Medal\" />\n              ) : (\n                player.rank\n              )}\n            </span>\n            <span className=\"table-content-name\">{player.fullName}</span>\n            <span className=\"table-content-startTime\">\n              {getTime(player.startTime)}\n            </span>\n            <span className=\"table-content-finishTime\">\n              {getTime(player.finishTime)}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport getTime from '../../utils/timeConversion';\n\nexport default class Consolation extends Component {\n  render() {\n    const { rest, currentTime } = this.props;\n    return (\n      <div className=\"table-body\">\n        {rest.map((player) => (\n          <div className=\"table-content\" key={player.id}>\n            <span className=\"table-content-ranking\">{player.rank}</span>\n            <span className=\"table-content-name\">{player.fullName}</span>\n            <span className=\"table-content-startTime\">\n              {getTime(player.startTime)}\n            </span>\n            <span className=\"table-content-finishTime\">\n              {currentTime < player.finishTime\n                ? ''\n                : getTime(player.finishTime)}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class TableHeaders extends Component {\n  render() {\n    return (\n      <div className=\"table-headers\">\n        <span className=\"table-content-ranking header-text\">Ranking</span>\n        <span className=\"table-content-name header-text\">Name</span>\n        <span className=\"table-content-startTime header-text\">Start Time</span>\n        <span className=\"table-content-finishTime header-text\">\n          Finish Time\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './EntryList.scss';\nimport Winners from '../Winners/Winners';\nimport Consolation from '../Consolation/Consolation';\nimport TableHeaders from '../TableHeaders/TableHeaders';\n\nexport default class EntryList extends Component {\n  render() {\n    const { rankings, currentTime } = this.props;\n    const winner = rankings.filter(\n      (player) => player.rank === 1 || player.rank === 2 || player.rank === 3\n    );\n    const rest = rankings.filter(\n      (player) => player.rank !== 1 && player.rank !== 2 && player.rank !== 3\n    );\n    return (\n      <div className=\"main-table\">\n        <TableHeaders />\n        <div>{winner.length > 0 ? <Winners winner={winner} /> : null}</div>\n        <Consolation rest={rest} currentTime={currentTime} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Entry.scss';\nimport loader from '../../images/loader.svg';\nimport EntryList from '../EntryList/EntryList';\n\nexport default class Entry extends Component {\n  render() {\n    const { entries, currentTime } = this.props;\n    return (\n      <div className=\"displayTable\">\n        <h1 className=\"event-heading\">Event Timing LeaderBoard</h1>\n        {entries.length > 0 ? (\n          <div className=\"ranking-table\">\n            <EntryList rankings={entries} currentTime={currentTime} />\n          </div>\n        ) : (\n          <div className=\"loader\">\n            <img src={loader} alt=\"Loader\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","const names = [\n  'Emmett Bishop',\n  'Fenix Skiles',\n  'Jacoby Schulz',\n  'Juna Steiger',\n  'Shlomo Hacker',\n  'Aaryn Manzanares',\n  'Renato Nordstrom',\n  'Aayden Lombardi',\n  'Jaxiel Danna',\n  'Danae Hermann',\n];\n\nexport default names;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Entry from './Components/Entry/Entry';\nimport athletes from './utils/getNames';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entryOrder: [],\n      outputOrder: [],\n      startTime: null,\n      firstFinishTime: null,\n      endTime: null,\n      currentTime: null,\n      interval: 500,\n    };\n  }\n\n  filterUsers() {\n    const { currentTime, entryOrder, interval, firstFinishTime } = this.state;\n\n    const filteredList = entryOrder.filter(\n      (player) => player.startTime <= currentTime\n    );\n\n    if (currentTime < firstFinishTime) {\n      this.setState({\n        outputOrder: filteredList.reverse(),\n        currentTime: currentTime + interval,\n      });\n    } else {\n      const winner = filteredList\n        .filter((player) => player.finishTime <= currentTime)\n        .sort((pl1, pl2) => pl1.finishTime - pl2.finishTime);\n      const remaining = filteredList\n        .filter((player) => player.finishTime > currentTime)\n        .sort((pl1, pl2) => pl2.startTime - pl1.startTime);\n\n      winner.forEach((player, index) => (player.rank = index + 1));\n      remaining.forEach((player, index) => (player.rank = 'N/A'));\n      this.setState({\n        outputOrder: [...winner, ...remaining],\n        currentTime: currentTime + interval,\n      });\n    }\n  }\n\n  componentDidMount() {\n    const sortedAthletesEntry = [...athletes].sort(\n      (a, b) => a.startTime - b.startTime\n    );\n    const sortedAthletesFinish = [...athletes].sort(\n      (a, b) => a.finishTime - b.finishTime\n    );\n\n    const len = athletes.length;\n\n    this.setState({\n      entryOrder: sortedAthletesEntry,\n      startTime: sortedAthletesEntry[0].startTime,\n      firstFinishTime: sortedAthletesFinish[0].finishTime,\n      endTime: sortedAthletesFinish[len - 1].finishTime,\n      currentTime: sortedAthletesEntry[0].startTime - 5000,\n    });\n\n    this.timer = setInterval(() => this.filterUsers(), this.state.interval);\n  }\n\n  componentDidUpdate() {\n    if (\n      this.state.outputOrder.length > 0 &&\n      !this.state.outputOrder.some((player) => player.rank === 'N/A')\n    ) {\n      clearInterval(this.timer);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { outputOrder, currentTime } = this.state;\n    return (\n      <div className=\"App\">\n        <Entry\n          className=\"Entry\"\n          entries={outputOrder}\n          currentTime={currentTime}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}